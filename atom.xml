<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Zephyrizing]]></title>
  <link href="http://www.zephyrizing.net/atom.xml" rel="self"/>
  <link href="http://www.zephyrizing.net/"/>
  <updated>2014-10-11T06:20:46-04:00</updated>
  <id>http://www.zephyrizing.net/</id>
  <author>
    <name><![CDATA[Geoff Shannon]]></name>
    <email><![CDATA[geoffpshannon@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hacker School: Week 1 Review]]></title>
    <link href="http://www.zephyrizing.net/blog/2014/10/11/hacker-school-week-1-review/"/>
    <updated>2014-10-11T04:48:52-04:00</updated>
    <id>http://www.zephyrizing.net/blog/2014/10/11/hacker-school-week-1-review</id>
    <content type="html"><![CDATA[<p>So, I can&rsquo;t sleep, and it&rsquo;s the end of my first week at
<a href="https://www.hackerschool.com/">Hacker School</a>, so I thought I&rsquo;d do some reflecting on what I did,
why I&rsquo;m here and similar topics.</p>

<!--more-->


<h2>Week Review</h2>

<h3>Monday</h3>

<p>This week has been a blur in some ways and incredibly long in others.
I started out on Monday with an interesting but ultimately abortive
attempt to pair with Alyssa Carter on her observational type system
implementation in Idris. Given that I know pretty much nothing about
either type theory or Idris, this outcome was probably somewhat
inevitable.  In retrospect, while it was interesting to get some
exposure to the ideas and concepts that she talked about, I probably
should have admitted more freely when things she was saying were going
over my head. This is something that I&rsquo;ve always struggled with, and I
think that Hacker School is a great place to try and tackle getting
over it.</p>

<p>The rest of Monday I spent flailing. And not really with any code;
mostly with just getting familiarized with Zulip and the HS (physical)
environment, and turning off most notifications in Zulip.  I
discovered an interesting thing about myself that I hadn&rsquo;t been fully
aware of previously: when there are constant notifications happening
(like when you&rsquo;re highly subscribed to Zulip and desktop notifications
are turned on), I get really stressed out on a subconscious level.</p>

<p>It&rsquo;s sort of similar to how I start to feel inexplicably rushed when
my bladder is getting full, but before I actually notice the urge to
pee.</p>

<p>Anyhow, during my flailing I also poked a bit at my
<a href="https://github.com/RadicalZephyr/snake-puzzle-solver">snake-puzzle-solver</a> project, and discovered that I&rsquo;d left it in a
sort of broken-ish state.</p>

<h3>Tuesday</h3>

<p>On Tuesday I felt much calmer. I&rsquo;m having a hard time remembering now
what exactly I worked on. I believe it was working through
<em><a href="https://realworldocaml.org/">Real World OCaml</a></em> though.  I didn&rsquo;t get very far, but I also spent
a bit of time <a href="http://www.zephyrizing.net/blog/2014/10/07/dot-dot-dot-and-this-is-why-master-should-be-stable/">helping Sammy out</a>, and fixing up this
blog with Octopress.</p>

<h3>Wednesday</h3>

<p>Through some poor decision-making Tuesday evening (i.e. eating two
slices of pizza, and also drinking a not inconsiderable amount) I was
either very gluten-sick or very, very hungover on Wednesday. No good,
very bad feels were had all day. At the time I was fairly convinced
that it was the pizza. In retrospect, the symptoms were very
hangover-like. Perhaps I just got much drunker than I thought I did?
Hard to say.</p>

<h3>Thursday</h3>

<p>On Thursday I powered through the first third or so of <em>Real World
OCaml</em>. That was awesome. OCaml is a fascinating language, and even
though it has perhaps more than it&rsquo;s share of syntactic quirks it&rsquo;s
been fun learning it. On a slightly meta-level I was sort of
dissatisfied throughout the day because of my (mostly self-imposed)
isolation. Not using Zulip much - because of how distracting it is -
makes me feel a bit cut-off from some of the social aspects of HS. And
I still haven&rsquo;t really found the courage to seek out somebody to pair
with. Another thing I want to work on. Also, the fact that I was doing
something so ordinary and mundane as simply reading a book made me
feel bad. Reading a book on a new language and working through the
code examples is something that I can, have, and - most likely - will
do again at home. So why am I &ldquo;wasting&rdquo; my time at Hacker School,
precious, precious time that it is, doing it here? Particularly since
I&rsquo;m doing it alone!!</p>

<p>I don&rsquo;t really have answers to most of these dissatisfactions. Most of
them are probably just my social awkwardness manifesting, and the last
one sounds suspiciously like a strange form of Imposter Syndrome.</p>

<p>I stayed late in the evening though and started working on a neat
project that occurred to me when I suggested that another HS&#8217;er work
through Phil Nelson&rsquo;s minishell - implementing the minishell in
OCaml!! And even more importantly, I achieved a real-feeling amount of
success in the project! I was able, without any real documentation
(couldn&rsquo;t find accurate docs!) to utilize the OCaml Unix module well
enough to create the equivalent of the <code>minishell.c</code> that Nelson gives
out as the basis for the shell, and to complete the equivalent of
assignment 1.</p>

<h3>Friday</h3>

<p>I somehow gained the impression that showing up at the space was less
expected on Friday. Now I&rsquo;m really not sure where/how I got that
idea.  But I&rsquo;m also totally unsure if it&rsquo;s actually wrong&hellip; >:(</p>

<p>I did however use the day to catch up on some sleep, do some errands
(digital ones anyhow) and go hang out with a friend I haven&rsquo;t seen in
literally years. So, overall win even if I did totally miss out on a
HS day.  But again, it makes me feel sort of disconnected to be not at
the space when others are.</p>

<h2>Project Ideas</h2>

<p>Given some of my meta-dissatisfaction that I felt on Thursday
regarding what I&rsquo;ve been working on, I thought I might try to list
some other projects that seem more &ldquo;Hacker School worthy&rdquo;.</p>

<p>Looking to the <a href="https://www.hackerschool.com/manual#sec-principles">three traits of an awesome Hacker Schooler</a>,
I started thinking about what are some challenging (strive for
greatness) problems that I could approach with rigor.</p>

<ul>
<li>Dive into the bug in auto-fill in emacs, try to fix it</li>
<li>Pursue learning more graphics stuff (since I&rsquo;ve been sort of
intimidated by it for a while). Project-wise, it might be
interesting to try and discover what sort of work it would take to
update Emacs&#8217; rendering engine.</li>
<li>Try to dive into the Boomerang decompiler&rsquo;s source code and
understand it</li>
</ul>


<p>And some other random things I want to do (but might not be feasible):</p>

<ul>
<li>Implement a language that has lispy-prefix syntax but OCaml
semantics; in particular that has type-inferencing</li>
<li>To that end, implement the type inferencing engine that powers OCaml
type inferences</li>
<li>Port Boomerang to use the LLVM architecture</li>
</ul>


<h2>Final Thoughts</h2>

<p>It&rsquo;s frustrating how many of the things that I want to do still have
what seems like huge mounds of prerequisites in front of them. I want
to do all of these interesting language things, but I feel like I&rsquo;m
blocked from doing them because I want to do them in LLVM, but I don&rsquo;t
know anything about actually using the LLVM.</p>

<p>Also, when I was reflecting on what I need to do to become a better
programmer, one of the recurring thoughts I responded with is that I
need to write/work on a larger system/project. I feel like I have
quite a bit of experience taking an small projects. But not something
like YRAS&hellip; Which, I think, is one reason that I am absolutely
terrified of starting that project.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[... And This Is Why Master Should Be Stable]]></title>
    <link href="http://www.zephyrizing.net/blog/2014/10/07/dot-dot-dot-and-this-is-why-master-should-be-stable/"/>
    <updated>2014-10-07T13:28:48-04:00</updated>
    <id>http://www.zephyrizing.net/blog/2014/10/07/dot-dot-dot-and-this-is-why-master-should-be-stable</id>
    <content type="html"><![CDATA[<p>Second day at Hacker School.  I spent the morning doing two things:</p>

<ul>
<li>getting my blog setup to use <a href="http://octopress.org/">Octopress</a>.</li>
<li>helping another HS-er troubleshoot getting setup with <a href="http://flask.pocoo.org/">Flask</a> and <a href="http://flask.pocoo.org/docs/0.10/tutorial/introduction/">Flaskr</a>.</li>
</ul>


<!--more-->


<p>Yesterday, I was super frustrated by the difficulties I had in getting
Octopress going, and was reminded of the frustrations with setting up
Ruby environments that led me to wipe my computer and start from
scratch a few weeks ago.  You know, that and a certain amount of boredom.</p>

<p>Anyhow, I was able to make more headway today, largely because I
sorted out all of the really silly stuff yesterday.</p>

<p>But helping Sammy with setting up <a href="http://flask.pocoo.org/">Flask</a> was a nightmare!  TL;DR, we
figured it out, and it was incredibly simple.</p>

<p>First off, there were some minor SNAFU&rsquo;s with me showing her about
[virtualenv], and explaining briefly how it works and how why she
should use it.  But then, we were confronted with these instructions
on the <a href="https://github.com/mitsuhiko/flask/tree/master/examples/flaskr">Flaskr doc page</a> on Github, a natural place to
look when the <a href="http://flask.pocoo.org/docs/0.10/tutorial/introduction/">&ldquo;actual&rdquo; docs</a> don&rsquo;t mention anything about how
to install or setup the damn thing.</p>

<p>WWe spent nearly two and a half hours searching for the mythical
<code>flask</code> binary, to no avail.  Finally, after I inadvertently ran
aacross this <a href="https://github.com/mitsuhiko/flask/issues/1180">flask issue</a>, it dawned on me that we might be
having the same problem.  Well, that&rsquo;s not quite true.  In reality, I
got so frustrated that I decided to just try the simplest thing that I
could think of to get flaskr to run <code>python flaskr.py</code>.  Low and
behold, it worked!!  Then, in retrospect, having seen that issue
describing the disconnect between the docs for flaskr in the flask
<code>master</code> branch and what the latest stable version was, I went and
looked at the <a href="https://github.com/mitsuhiko/flask/tree/0.10.1/examples/flaskr">last stable release docs</a> for flaskr, and
there it was. Simple instructions to do the simple, straightforward
thing.</p>

<p>[[virtualenv]: <a href="http://virtualenv.readthedocs.org/en/latest/virtualenv.html">http://virtualenv.readthedocs.org/en/latest/virtualenv.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keybase Hacker News Q&A]]></title>
    <link href="http://www.zephyrizing.net/blog/2014/06/12/keybase-hackernews-q&a/"/>
    <updated>2014-06-12T00:00:00-04:00</updated>
    <id>http://www.zephyrizing.net/blog/2014/06/12/keybase-hackernews-q&a</id>
    <content type="html"><![CDATA[<p>I started using <a href="https://keybase.io">Keybase</a> sometime back in April. I&rsquo;ve been interested
in doing crypto stuff for a long time, starting with using an SSH
keypair instead of a password to access the WWU CS department&rsquo;s
computer labs remotely.</p>

<p>Learning more about GPG and actually figuring out how to send and
receive encrypted messages has been on my list of things to learn for
a while, but every time I had a couple spare minutes and tried to
approach it I was rebuffed by the impenetrability of the manuals for
gpg.</p>

<p>However, recently while thinking about who to give my remaining five
invites to, I decided to do some more research on what those more
security-savvy than I thought about Keybase.</p>

<!--more-->


<p>The results were somewhat of a mixed bag. In no particular order, I
read:</p>

<ul>
<li><a href="http://blog.lrdesign.com/2014/03/thoughts-on-keybase-io/">A thoughtful critique</a></li>
<li><a href="http://www.tbray.org/ongoing/When/201x/2014/03/19/Keybase">A nice first look</a></li>
<li><a href="https://filippo.io/on-keybase-dot-io-and-encrypted-private-key-sharing/">A response to the people decrying the upload private key feature</a></li>
<li><a href="http://blog.lizdenys.com/2014/03/31/refusing-to-verify-myself/">A brief look at the chain of trust in even getting Keybase</a></li>
</ul>


<p>I also came across the discussion that occurred on Hacker News shortly
after Keybase first appeared. As so often happens when I stumble on to
a HN comment page, I ended up reading the whole thing. What I noticed
was that there seems to be some information from Max and Chris (the
founders of Keybase) that I hadn&rsquo;t run across on the Keybase website
itself.</p>

<p>So I volunteered myself for a public service. I extracted the parts of
the discussion that were interesting and relevant into a text
document. I tried to focus on the questions that got interesting
responses. I left out many little asides, and tangential discussions.</p>

<p>The founders of Keybase are malgorithms and maxtaco. Most of the
answers are by them, though in some cases I&rsquo;ve preserved a chain of
replies, with only the first marked as a &ldquo;question&rdquo;. Without further
ado:</p>

<blockquote><h3>General Announcement</h3>

<p>malgorithms 118 days ago</p>

<p>There were multiple questions/comments below about this, so I felt I
should clarify one detail about the keybase client&rsquo;s trust of the
server. When the keybase client requests maria&rsquo;s key from the keybase
server, it does not simply trust the public key because it trusts the
server (or uses https - huh?).</p>

<p>Rather, the server replies with links to tweets, gists, etc. &ndash;
maria&rsquo;s public identity proofs. The keybase client does not trust that
these are honest, so it scrapes them directly and makes sure they were
signed by the same public key that the server provided. In other
words, the server could reply with a different maria, and simply lie,
but not with the real maria&rsquo;s github or twitter account.</p>

<p>The server could also lie by omission, leaving out an identity. But it
cannot invent ones that do not exist, without the client knowing.</p>

<p>Again, the premise here is that maria is the sum of her online
identities.</p>

<p>The website itself is of course a different story. When you look up
maria on keybase&rsquo;s website, you are trusting that keybase.io did not
lie about her github account. Fortunately you can confirm by following
the link to her gist, where she announced her keybase username and
posted her key fingerprint.</p>

<h3>Q:</h3>

<p>theboss 118 days ago</p>

<p>I don&rsquo;t see why you don&rsquo;t just get the key once, allow you to verify
it, and store it locally. It seems pointless to make all these extra
requests to you.</p>

<p>There&rsquo;s a reason that gpg does this&hellip;.. Maria&rsquo;s twitter being hacked,
Maria&rsquo;s github being hacked, Maria&rsquo;s Keystore being hacked&hellip;.a lot
can go wrong.</p>

<p>There are still weaknesses like, you lie about a github and link to
your own github, and lie about the public key. And&hellip;many others.</p>

<h3>A:</h3>

<p>malgorithms 118 days ago</p>

<p>yes, it does do this; once you&rsquo;re satisfied with maria&rsquo;s identity,
that she&rsquo;s the person you want, you sign a statement to that effect,
which you can store just locally or post back to the server. (or of
course you can just sign her key in GPG!) The latter - posting back to
the server - is for portability reasons. A keybase user will likely
use keybase on multiple machines.</p>

<h3>Q:</h3>

<p>riquito 117 days ago</p>

<p>The first thing I thought about is a man in the middle attack with
homoglyphs. I don&rsquo;t know if I&rsquo;m paranoid, but look at this</p>

<blockquote><p>keybase id maria</p></blockquote>

<p>   pgp: C4B3 15B4 7154 5281 5100 1C58 C2A5 977B 0022 github:
   mаria_leah ✓ <a href="https://gist.github.com/23423">https://gist.github.com/23423</a> twitter: mаria_h20 ✓
   <a href="https://t.co/m%D0%B0ria_h20/523554">https://t.co/m%D0%B0ria_h20/523554</a> site: mаriah20.com ✓
   <a href="https://m%D0%B0riah20.com/X904F...">https://m%D0%B0riah20.com/X904F&#8230;</a></p>

<p>I looked up for &lsquo;maria&rsquo;, all ascii. The answer, served by a malicious
server, contains the first &lsquo;a&rsquo; of maria in Cyrillic (check yourself,
you&rsquo;ll see that &lsquo;mаria_leah&rsquo; != &lsquo;maria_leah&rsquo;). This would fool the
user.</p>

<p>Maybe the client should apply some logic as browsers do for IDN
homograph attack to show characters not in your locale in a different
way, or at least warn you.</p>

<h3>A:</h3>

<p>malgorithms 117 days ago</p>

<p>Hi riquito - this is a very legitimate concern, and it has to be
reviewed individually for each type of proof keybase supports, in the
client. With twitter, keybase, and github, you can&rsquo;t have a username
containing any character other than an alphanumeric, dash, or
underscore. Which means this kind of attack is impossible.</p>

<p>But for future identity proofs (domains, for example, which we&rsquo;ve yet
to implement), this kind of attack is real. Our approach here will be
that anything outside of normal ascii will be highlighted and
addressed to the user, as a serious warning.</p>

<h3>Q:</h3>

<p>sweis 118 days ago</p>

<p>Even though there is a disclaimer, I think the &ldquo;encrypt in your
browser&rdquo; feature (<a href="https://keybase.io/encrypt">https://keybase.io/encrypt</a>) undermines Keybase&rsquo;s
security credibility.</p>

<p>This form has essentially the same level of security as
Hushmail. Anybody using it should consider the content exposed to
Keybase or anyone compromising Keybase.</p>

<h3>A:</h3>

<p>maxtaco 118 days ago</p>

<p>I&rsquo;m not an authority on hushmail, but it seems like they do crypto on
the server, and the server is just trusted to throw away the keys and
plaintext?</p>

<p>In the keybase Web client, all crypto happens on the browser. The
server knows no keys or data in plaintext. Of course, you&rsquo;d have to
audit the front-end JS code to believe that claim.</p>

<p>But our intention is that the only way to compromise the Web-based
tools would be to insert malicious JavaScript into the client&rsquo;s
browser. A read-only compromise of the server yields only encrypted
data, and the server never has access to the decryption keys.</p>

<h3>Q:</h3>

<p>JustARandomGuy 118 days ago</p>

<p>Hi Chris, a few comments:</p>

<ol>
<li><p>I like the site design, the story flow on the front page does a
great job of explaining what keybase is.</p></li>
<li><p>I see (from the abovementioned story flow) that keys can be
verified by reviewing signed tweets/gists. Is this functionality
extendable to arbitrary links; i.e. verifying keys against personal
blogs, Tumblr, WordPress or does the third-party site need to
implement a recognized API?</p></li>
</ol>


<p>Again, thanks so much, and it looks like a terrific site so far.</p>

<h3>A:</h3>

<p>malgorithms 118 days ago</p>

<p>Good question! There will be no such thing as a general check, because
&ndash; for any identity &ndash; the client software has to perform a check that
a human would agree means something. For example, what does it mean
that you own a certain blog? How would a person confirm it? Well, at
first glance it might mean that you have the power to post a message
there. But someone else could do that it in a comment, and so that
wouldn&rsquo;t work with Keybase. So any given identity check has to match
some human definition of what it means to have that identity. And it
has to be publicly auditable.</p>

<p>With twitter, it&rsquo;s the ability to post a tweet under a certain
username. With owning a tumblr account, it might be something
similar. With your known StackExchange profile it might mean posting a
statement in a specific part of your profile. And so on.</p>

<p>The common thread in each case is (1) that you post in a place where
only your identity can, and (2) what you post is a signed statement
claiming a connection among three things: (a) your keybase username,
(b) your public key, and (3) the identity on that third party
service. (The third one is necessary so it can&rsquo;t be moved elsewhere.)
Note how twitter and github&rsquo;s are totally different, but achieving
these three things.</p>

<p>We will build out this list of identity checks, hopefully making all
kinds of them easy to do. Everything from proving you own a domain to
having a tumblr or reddit accoun. The definition of those checks will
all be publicly reviewable, both in the spec and in the client, which
is what checks them for you.</p>

<h3>Q:</h3>

<p>ghayes 118 days ago</p>

<p>Well, to follow up, could this be extended to ownership of a domain
(via DNS txt record)? Could we use this as a means of authentication
of a self-signed certificate for a domain?</p>

<h3>A:</h3>

<p>maxtaco 118 days ago</p>

<p>Yes to DNS, though we have to be careful here since DNS can be spoofed
more easily than github or twitter proofs over https. I was thinking a
slightly better way to prove ownership of foo.com would be to post a
proof at <a href="https://foo.com/_keybase">https://foo.com/_keybase</a> (or something similar). To spoof
this, an attacker would have to spoof DNS and also the https
certificate.</p>

<p>Authenticating a self-signed domain certificate via keybase is a neat
idea, but would probably need some browser support, unless there&rsquo;s a
clever hack that I&rsquo;m not thinking of.</p>

<h3>Q:</h3>

<p>sneak 118 days ago</p>

<p>I really, really want crypto, specifically, safe and secure-by-default
crypto, to become much more usable.</p>

<p>Despite this hope, I can&rsquo;t seem to help the fact that the first thing
that popped into my head when I read their webpage is &ldquo;oh, they&rsquo;re
wrapping and abstracting important key authentication and critical key
trust configuration to make it more user-friendly, and implementing it
all in javascript. WHAT COULD POSSIBLY GO WRONG?&rdquo;</p>

<p>Even if I got whacked on the head one day and suddenly loved
javascript, I would not use it for certain projects when I wanted to
be taken seriously by, say, cryptographers.</p>

<p>Then again, look at all the success cryptocat has had!</p>

<h3>A:</h3>

<p>FiloSottile 118 days ago</p>

<p>As long as the trust model is that the server is untrusted, it can be
written in the language they prefer. As for the client, there can be
as many implementations in as many languages as needed to make
everyone happy IMHO (they call it reference client in the home).</p>

<h3>Q:</h3>

<p>sneak 118 days ago</p>

<p>If this talks to keybase&rsquo;s API over https and any large groups come to
rely on this, we&rsquo;ve then effectively replaced the decentralized safety
of the Web of Trust used for authenticating PGP keys with the PKI
that&rsquo;s used in browsers, which is completely and totally fucked.</p>

<p>I cannot support a project that doesn&rsquo;t build and strengthen the
underlying WoT. Getting https involved for authenticating unknown keys
is a huge step backwards. Madness.</p>

<h3>A:</h3>

<p>maxtaco 118 days ago</p>

<p>We&rsquo;re not big fans of browser PKI either, but we&rsquo;re using it as
scaffolding that hopefully one day can be torn down.</p>

<p><code>keybase-installer</code> needs an initial install over https from npm. We
unfortunately saw no way around this.</p>

<p>Assuming that install succeeds with integrity, then all future
upgrades of the installer and client are verified with PGP keys stored
locally on the client.</p>

<p>Once the client is installed, it speaks HTTPS to the server, but we&rsquo;re
not trusting the root CA. Rather, we sign with our own CA that we ship
with the client.</p>

<p>The proofs themselves, on twitter and github, all can be verified in
the clear, as FiloSottile points out, but of course relying upon the
HTTPS certificates of twitter and github to make sure the proofs
weren&rsquo;t corrupted in transit between those services and the client.</p>

<h3>Q:</h3>

<p>bqe 118 days ago</p>

<p>I don&rsquo;t understand how using HTTPS for the API has any bearing
whatsoever on the WoT built via PGP.</p>

<p>You can still verify the keys with your client&rsquo;s cached copies, or
using another PGP client.</p>

<h3>A:</h3>

<p>FiloSottile 118 days ago</p>

<p>Exactly, and moreover. If there is no trust in the server, everything
can even go over unencrypted HTTP. CAs have no business here.</p>

<h3>Q:</h3>

<p>IgorPartola 118 days ago</p>

<p>OK, finally looking at it on a desktop&hellip;</p>

<p>So my first question is this: if I know &ldquo;maria&rdquo; and I want to look her
up to get her GPG key, how does keybase handle that? Does it just do
an email address lookup, as in goes to, say, GitHub, grabs her email
address, maria@example.com, then goes to a public key server and grabs
the key that corresponds to maria@example.com?</p>

<p>If that&rsquo;s the case, there is a security issue: what if Maria never
published a GPG key, but Chloe did using Maria&rsquo;s email address?
Moreover, what if Chloe has access to Maria&rsquo;s inbox and can read these
messages I believe to be only readable by Maria?</p>

<p>Edit: I see from responses below that various online presences of an
identity tied to &ldquo;maria&rdquo; are checked. Is this not then susceptible to
its own attack? For example, if Maria does not have a Twitter account
and I create one, or compromise hers and post a different key, will I
be able to at least introduce doubt into her identity, if not take it
over outright?</p>

<h3>A:</h3>

<p>maxtaco 118 days ago</p>

<p>No, there are no proofs based on e-mail addresses, because such proofs
are not publicly-auditable. We could ask that maria prove to the
server that she controls a given gmail account, but there&rsquo;s no way for
the server to prove that to you.</p>

<p>We want the server to be untrusted, ideally just a dumb message
router.</p>

<p>If Chloe wants to impersonate maria, she&rsquo;ll need to get control of
maria&rsquo;s twitter and github accounts. Just claiming maria&rsquo;s email
address won&rsquo;t get her anywhere. (Note that GPG keyservers are
susceptible to exactly the attack you describe).</p>

<h3>A:</h3>

<p>IgorPartola 118 days ago</p>

<p>Hold on. First, GPG servers are susceptible to the same type of
attack, except they would never be used that way. You never look up a
person by email, the send them an encrypted message using the key you
get. Instead, you verify their key and email address out of band: you
meet them, check their credentials, then sign the key. Keybase is
trying to get rid of the in-person verification, an effort I applaud,
but in favor of a much weaker check: whether a few centralized
accounts had been compromised.</p>

<p>The other part, where you check Maria&rsquo;s Twitter and GitHub accounts,
means that a few things like Twitter, and GitHub are impervious to
Chloe: a tall order and a centralized one at that.</p>

<p>Once again, is the point here for me to get a tuple of (email address,
public GPG key) so I can email Maria securely? If so, then someone
somewhere has to prove that this tuple fetched from the public key
servers is valid.</p>

<p>If the point is to only communicate via keybase.io, then the service
is centralized, and useless once actual sensitive info is exchanged,
the US government takes notice and shuts it down at the DNS level.</p>

<h3>A:</h3>

<p>maxtaco 118 days ago</p>

<p>Cool, I agree no one should use PGP servers the way I described, but
you never know what people are doing out there. To do things the
proper way, as you described, is difficult in practice for lots of
people.</p>

<p>To answer the question, the point isn&rsquo;t to get an (email address,
GPG-key) mapping. It&rsquo;s to get a (public-internet-identity, GPG-key)
mapping. People sometimes do this today in an adhoc manner
(e.g. tweeting your GPG fingerprint). We want it to be checkable by
user-friendly software.</p>

<h3>A:</h3>

<p>IgorPartola 118 days ago</p>

<p>I see. That MO makes a bit more sense then, though is it not then
limited to just Keybase.io and will no longer work if something
happens to this service? Or more importantly, is there a way to make
this distributed?</p>

<h3>A:</h3>

<p>maxtaco 118 days ago</p>

<p>If the site went away tomorrow, you&rsquo;d still have keys in your GPG
keychain. You&rsquo;d also have a local cache of the server-side data
relevant to you.</p>

<p>All public server-side data is available as a dump
(<a href="https://keybase.io/__/api-docs/1.0#call-dump-all">https://keybase.io/__/api-docs/1.0#call-dump-all</a>). Private data like
encrypted public keys and password hashes we of course will keep under
wraps.</p>

<p>We don&rsquo;t have immediate plans to make the system distributed, but if
someone did it, we&rsquo;d find it very cool. It&rsquo;s just too much for us to
do right now.</p>

<h3>Q:</h3>

<p>theboss 118 days ago</p>

<p>Where are the security details published? I think that&rsquo;s what we all
want to see&hellip;</p>

<p>On top of this&hellip;.I think this is cool in theory but bad in practice.</p>

<p>The assumption that Root CA&rsquo;s are trustworthy is already hard enough
to make, how do I know that Maria is actually Maria? How will you
verify that &ldquo;Maria&rdquo; actually owns that twitter, github, gmail. Maybe
it is possible to devise some type of scheme for those sites, but how
about more obscure services?</p>

<p>One mistake in one single account causes the entire thing to fall
apart&hellip;</p>

<h3>A:</h3>

<p>maxtaco 118 days ago</p>

<p>As Chris said, we would like to publish everything, just haven&rsquo;t found
the time yet. We have bits and pieces in wikis in our various github
repositories (almost all of which are open source and public).</p>

<p>The high bits are: all crypto is with GPG/RSA as per RFC4880. There
are of course problems here, but we wanted backwards-compatibility and
well-tested, well-used clients.</p>

<p>We encrypt server-stored GPG private keys (if you choose to use that
option) with TripleSec (see <a href="https://keybase.io/triplesec">https://keybase.io/triplesec</a>).</p>

<p>Users use GPG to sign a series of JSON objects, of the form &ldquo;I&rsquo;m
maxtaco on twitter&rdquo;, or &ldquo;I checked Chris&rsquo;s proofs as of 2014/2/14 and
they look good to me.&rdquo; All JSON objects that a user signs are chained
together with SHA-2 hashes. So a user can sign the whole group of JSON
statements by just signing the most recent one.</p>

<p>Here&rsquo;s an example (click on &ldquo;Show the Proof&rdquo;)
<a href="https://keybase.io/max/sigs/ZnBizHMA8RKSB598TaDtjlPlLKSEu1Wu...">https://keybase.io/max/sigs/ZnBizHMA8RKSB598TaDtjlPlLKSEu1Wu&#8230;</a></p>

<p>There&rsquo;s a fair amount of engineering that went into the software
distribution system. We rely first on npm to get the initial client
out there, but after that, exclusively GPG for code-signing. That&rsquo;s
documented here:</p>

<p><a href="https://github.com/keybase/node-installer/wiki/Update-Archit...">https://github.com/keybase/node-installer/wiki/Update-Archit&#8230;</a></p>

<p>We hope to have better documentation soon, and we value feedback, we
just haven&rsquo;t had the time to put it together yet.</p>

<h3>Q:</h3>

<p>caf 118 days ago</p>

<p>The idea here isn&rsquo;t that you use keybase to find out Maria&rsquo;s twitter,
github or gmail identities - it&rsquo;s the opposite. The idea is that you
already know who Maria is on one or more of those services, so the
fact that the account you know is Maria&rsquo;s at github has posted a
signed message from that public key is supposed to testify to you that
that is really your Maria&rsquo;s public key.</p>

<p>You could of course manually review and verify Maria&rsquo;s github post
that contains her public key - all that keybase is really doing here
is providing an easy way of discovering that github post (or tweet, or
whatever).</p>

<h3>A:</h3>

<p>andrewaylett 117 days ago</p>

<p>s/could/should/?</p>

<h3>A:</h3>

<p>caf 116 days ago</p>

<p>Only if you don&rsquo;t trust your copy of the keybase client (as opposed to
the server, which you should not need to trust).</p>

<h3>Q:</h3>

<p>theboss 118 days ago</p>

<p>When I get someone&rsquo;s GPG key I can call them on the telephone or go to
their house and make sure I got the right one.</p>

<p>I add it and use it. When you use this, I&rsquo;m assuming I get that key
every time from the server. I can get it and verify it once, or twice,
or three times, but what about the 1000th time? What happens when I am
important enough that they return a public key that is not Maria&rsquo;s,
and I am none the wiser.</p>

<h3>A:</h3>

<p>malgorithms 117 days ago</p>

<p>boss, I&rsquo;m glad you answered this question. Because it explains the
impetus for Keybase.</p>

<p>I think what Keybase is addressing in the status quo is twofold: (1)
sadly, almost no one does what you describe; in person meeting key
exchanges and webs of trust may sadly be as unpopular in 20 years as
they are now, and as they were 20 years ago. People who go to them are
often confused, even programmers. I wish it were different.</p>

<p>And (2) more important, in 2014, often the person you&rsquo;re dealing with
is someone whose digital public identity is what matters, not their
face in real life or phone number. If you know me online as
github/malgorithms and twitter/malgorithms, to get my key, meeting
someone in person or talking on the phone to someone who claims to be
me is actually less compelling than a signed statement by malgorithms
in all those places you know me.</p>

<p>And if you do know me in real life, then I can tell you my keybase
username and fingerprint, exactly as you&rsquo;re used to. So it&rsquo;s still as
powerful for meeting in person. With the added benefit you can confirm
my other identities, which you likely know to.</p>

<p>In answer to your scenario about verifying: you only need to review
the &ldquo;maria&rdquo; the server provides once, and then your private key signs
a full summary of maria &ndash; her key and proofs. Cases 2 through 1000 of
performing a crypto action on maria involve you only trusting your own
signature of what &ldquo;maria&rdquo; is. The client can query the server for
changes to her identity, and this will be configurable; if maria adds
a new proof, you might wish to know.</p>

<h3>A:</h3>

<p>jonesetc 117 days ago</p>

<p>This is what I assumed the answer would be, and at this point it just
becomes a difference in opinion. I personally do not believe that the
methods you describe are generally acceptable options in the modern
age. My phone number and address are much more important to me than
the off chance of someone capturing my https traffic, breaking it, and
inserting a fake public key. There is a point where the absolute
security of exchanging public keys written on pieces of paper in a
park are called for, but it&rsquo;s not for everyone or even most.</p>

<h3>Q:</h3>

<p>jonesetc 118 days ago</p>

<p>Is there a way to remove an associated account?</p>

<h3>A:</h3>

<p>maxtaco 118 days ago</p>

<p>Yes, though it might be broken right now. Our plan is to allow this,
for sure.</p>

<h3>Q:</h3>

<p>diasp 117 days ago</p>

<p>Interesting. Another approach is <a href="https://encrypt.to/">https://encrypt.to/</a> which loads the
public key from key servers and encrypts client-side via JS.</p>

<h3>A:</h3>

<p>malgorithms 117 days ago</p>

<p>To clarify the difference, it seems encrypt.to is a service which does
PGP crypto in the browser, based on keys pulled from keyservers. In
contrast, Keybase is an identity-proving service, which proves key X
belongs to person with twitter account Y, github account Z, etc. As a
convenience, it also does encryption and other crypto actions for its
users.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[S & E Part One: The Single Story]]></title>
    <link href="http://www.zephyrizing.net/blog/2014/05/22/s-&-e-part-one:-the-single-story/"/>
    <updated>2014-05-22T23:00:00-04:00</updated>
    <id>http://www.zephyrizing.net/blog/2014/05/22/s-&-e-part-one:-the-single-story</id>
    <content type="html"><![CDATA[<h2>Beginnings</h2>

<p>I have a story about myself and education.  That story goes like this.
I hate school.  No, I mean I HATE it.  I always have.  The proof is
that one time when I was in preschool, I noticed that every morning I
put clothes on right before I was taken to school.  So, I reasoned, if
I didn&rsquo;t put clothes on, I couldn&rsquo;t go to school!  This clever plan
backfired unfortunately when my mother in frustration packed me into
the car buck naked and drove me anyways.</p>

<!--more-->


<p>This is my standard story about my relationship with school.  It
exemplifies the deep antipathy that I hold towards it, as well as
revealing a somewhat embarrassing story about myself that is quite
amusing. Most of all it is a story that I enjoy telling, both to
myself and to others.</p>

<p>But really, my relationship with school is much more complicated than
that. I love learning.  Here&rsquo;s another story about my relationship
with school.  In 7th grade I almost failed math. I went to a small
private school, so when my teacher noticed me struggling, instead of
putting me in the low track immediately, she talked to my mom and they
made a deal.  If I could complete a packet of homework over the summer
I could be placed in the &ldquo;intermediate&rdquo; track.</p>

<p>So over the summer, my mother hired a neighborhood college student to
tutor me in math and ultimate frisbee.  Under his kind and encouraging
supervision, I learned lots of little shortcuts and managed to fill in
most of the holes in my math knowledge. I also developed a wicked
Frisbee forehand.  The next year, I aced the intermediate math class.
I loved it.  My math teacher was a kooky old Irish man with eyebrows
that covered half of his forehead.  He took a special interest in me,
and managed to cement my love of math.</p>

<p>Yet a third story.  In my 11th grade pre-calculus course, we studied
proofs.  It was my first introduction to them and I immediately fell
in love.  I did reasonably well in the class, but at the end of the
year my teacher gave out some awards.  I got the award for &ldquo;highest
learning to grade ratio.&rdquo;</p>

<p>In the end, these stories are only snapshots of my experience as a
student. Broader themes have emerged though. Throughout my entire
educational career I have struggled with the disconnect between what
schools claim to be doing - helping students learn - and what I was
actually experiencing.  When the dissonance was mild, I enjoyed school
and invariably excelled.  When it was great, I struggled.  I struggled
to meet both my need to learn, and grow and the schools need to
document and have me prove that learning.</p>

<p>This documenting process - embodied in the assignment of grades, and
the giving of tests - was one of the hardest things for me to deal
with. My single-story casts me in the role of a daring protagonist
pitted against the brutal institution of school.  At least that&rsquo;s how
it plays out in my mind.  But as my other stories show, that&rsquo;s not the
whole truth of how my educational journey has gone.  My dislike for
school has varied in intensity and in expression.  When I was in
elementary and high-school it manifested most through extreme
procrastination on homework.  This had other negative consequences.
My perfectionist nature led to lots of late nights spent furiously
working on projects at the last minute. I&rsquo;m sure this caused my mother
more than a few grey hairs.</p>

<p>In addition, this pattern turned into a self-fulfilling prophecy about
why I hated schools. The things that I hate most about schools are the
bookkeeping and bureaucracy.  Turning in late work, or turning in
half-finished assignments is a good way to experience the worst of
both those aspects.  I think in some ways too, I wanted to blame my
procrastination on the school.  I knew that I could do better than
what I presented in much of my schoolwork and I was angry with myself
for not taking the steps needed to make sure that I did better.  In
the end, it was much easier for me to blame it on the school and keep
repeating the pattern. This cycle dominated my educational experience
from kindergarten all the way through until I graduated high school.</p>

<h2>Vacation</h2>

<p>By the time I was a senior in high-school, I was thoroughly sick of
educational institutions.  I had learned fairly well how to game the
system.  I was able to utilize the Running Start program to complete
my last couple of credits in half the time.  So my senior year I had a
light load the first semester and only one class the second.  As all
my classmates were furiously applying to colleges and visiting
campuses, I calmly decided that I was going to take a year off.</p>

<p>At the time I also felt strongly that there was only one school that I
had any desire to attend, St. John&rsquo;s College.  I applied to St. John&rsquo;s
during my senior year, and against my father&rsquo;s strong wishes to the
contrary, I informed them that I had no intention of actually
enrolling for the following academic year.  I requested that they
still consider my application as though I was applying for the current
year. I was accepted, and immediately exercised my option to defer
admission until 2007.</p>

<p>The adults in my life had many and varied reactions to my decision to
take a year off.  Thankfully, my mother was my staunchest supporter.
I lost a lot of respect for one of my favorite high-school teachers
when he strongly counseled me to &ldquo;just go to college&rdquo; because &ldquo;it will
open doors for you.&rdquo;  All of the advice was well meant I&rsquo;m sure, but I
didn&rsquo;t really hear the words that most people were using.</p>

<p>Instead, whenever I heard someone tell me that I should &ldquo;just get it
out of the way&rdquo; or something similar, what I heard head was &ldquo;you won&rsquo;t
go back.&rdquo;  Some people said this explicitly, or cited examples of
young hoodlums that they knew who had started out with just one year
off, and now, ten years later were still working a dead-end job and
living in their mother&rsquo;s basement.  This last may have struck home
more than I wanted to admit; at the time I <em>did</em> live in my mother&rsquo;s
basement.  This stunning lack of faith incensed me.  I know it wasn&rsquo;t
specific to me.  It seemed to simply be the prevailing wisdom about
college at the time.  But I knew from the inside that if I later
decided that I wanted to go back to school, I could and would do so.</p>

<p>This personal faith in myself is deeply rooted in my family
culture. My mother recently picked up a saying that exemplifies her
faith in my sister and I quite well: &ldquo;You can do hard things.&rdquo; My own
email signature for a long time has been &ldquo;Nothing is ever easy.&rdquo;  This
comes from a book where the expanded phrase is &ldquo;Nothing <em>worth doing</em>
is ever easy.&rdquo;  I think there is something powerful for me in the
union of these two aphorisms.  My phrase is a reminder that things in
life will be difficult; this is a critical reminder for someone with a
tendency towards perfectionism.  My mother&rsquo;s phrase completes this by
heading off the <em>reductio ad absurdum</em> that since everything is so
difficult, you might as well give up now.  In my journey towards
becoming a better student and a better learner, the personal power
that comes from accomplishment has been key.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Summary and Evaluation - How I Figured Out Why I Went to College]]></title>
    <link href="http://www.zephyrizing.net/blog/2014/04/21/the-summary-and-evaluation-how-i-figured-out-why-i-went-to-college/"/>
    <updated>2014-04-21T21:00:00-04:00</updated>
    <id>http://www.zephyrizing.net/blog/2014/04/21/the-summary-and-evaluation-how-i-figured-out-why-i-went-to-college</id>
    <content type="html"><![CDATA[<p>So. I am a Fairhaven student. I&rsquo;m also a Computer Science major. These
are two discrete descriptions of my academic life. Both are integral
parts of the story that I have been creating my whole life. But in
isolation, they imply very disparate things about me.</p>

<!--more-->


<p>For most of my time at Western I have tried to keep these parts of
myself separate. Compartmentalized. This final year, and particularly
these last two quarters that has not been an option. Because of my
somewhat lackadaisical approach to planning my first few years my
schedule has been practically dictated to me. One of the consequences
of this has been having to intermix my main campus self, with my
Fairhaven self. This has been rewarding but difficult.</p>

<p>As a Fairhaven student, I <em>must</em> take the Advanced Seminar during my
final quarter. And in the Advanced Seminar everyone writes what is
known as their <em>Summary and Evaluation</em>. I had heard of this document -
I&rsquo;ve had quite a few friends graduate from Fairhaven while I knew
them - but I really knew nothing about it.</p>

<p>What I&rsquo;m discovering is that it really is almost anything that we want
it to be. The loose sort of overall prompt is to tell whatever story
we want to about our life and education to this point. To help us on
begin that journey, we&rsquo;ve been writing a series of short reflections
on a variety of suggested topics. But like so much at Fairhaven it
really is ultimately left to us to choose our direction.</p>

<p>I knew I had strong feelings about education.  Particularly about my
own. What I didn&rsquo;t quite realize was how much I had to say about both
my own education, and how it relates to Education in general. Perhaps
most surprising of all is that not only do I have a lot to say. I
actually have a story to tell. I still don&rsquo;t quite know the whole of
that story.  But bit by bit, I&rsquo;m figuring it out. Excavating
it. You&rsquo;re welcome to tag along.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeJOS and Clojure]]></title>
    <link href="http://www.zephyrizing.net/blog/2014/04/17/lejos-and-clojure/"/>
    <updated>2014-04-17T19:00:00-04:00</updated>
    <id>http://www.zephyrizing.net/blog/2014/04/17/lejos-and-clojure</id>
    <content type="html"><![CDATA[<p>This is a short followup to my first post about
<a href="http://www.zephyrizing.net/blog/2013/09/03/why-am-i-doing-this/">experimenting with the Lego EV3&rsquo;s</a> and <a href="http://lejos.org">leJOS</a>. Shortly
after I wrote that post, I went on the Clojure IRC channel and talked
to <a href="http://technomancy.us/">Phil Hagelberg</a> and some other helpful folks about my
issues. They steered me away from attempting to install <a href="http://leiningen.org/">Leiningen</a> on
the EV3 itself, which was a relief since I think that way lay
madness. Instead, they suggested that I have a small launcher program
that would just setup a REPL. Then I could run my robot-controlling
Clojure code from there.</p>

<!--more-->


<p>This advice led to the creation of <a href="https://github.com/RadicalZephyr/ev3-nrepl">ev3-nrepl</a>. It&rsquo;s basically a small
skeleton Clojure project to provide the basis for running Clojure code
on the EV3. It&rsquo;s a minimalist setup, so it should provide a good
starting point for other people to continue experimenting. I tried to
explain how to use it fairly clearly, as well as add all the links to
the necessary documentation to get leJOS running on the EV3.</p>

<p>Unfortunately, despite this seemingly great start, I never ended up
actually doing anything interesting with Clojure on the EV3. There are
two related reasons for this. First, the robotics class I was in
started having actual coding assignments (thanks to the fact that we
could now run leJOS). Second, it turns out that leJOS is designed from
an incredibly stateful and imperative point of view. This makes it
very hard to develop clean Clojure code that makes use of their
API. Specifically, leJOS makes the assumption that any code making use
of it is going to start-up, do robot stuff, and then die. A Clojure
REPL obviously breaks this assumption rather badly. As it turned out,
this was the most painful when I was trying to figure out how to
program and build my robot at the same time.</p>

<p>What I wanted to do was be able to open a Clojure REPL connect to it,
and then leave it running for a long time. This is my normal modus
operandi, but the EV3 makes it even more critical that this
work. Because of the limited hardware, it takes several minutes for
nrepl to actually boot up.</p>

<p>I think that using Clojure as a prototyping tool for building robots
with the EV3 could be incredibly powerful. All of the
<a href="http://www.infoq.com/presentations/Clojure-Java-Interop">arguments</a>
for why Clojure is a great language for exploring Java API&rsquo;s are
applicable to working with the EV3 API&rsquo;s. Possibly even more so, since
there is something really, really cool about typing some commands at
the REPL and having your robot start moving around and doing
stuff. Unfortunately, because of the current architecture of leJOS and
the limited processing power of the EV3&rsquo;s it&rsquo;s not quite there yet.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clojure, LeJOS and EV3]]></title>
    <link href="http://www.zephyrizing.net/blog/2013/10/31/leJOS-and-EV3/"/>
    <updated>2013-10-31T22:00:00-04:00</updated>
    <id>http://www.zephyrizing.net/blog/2013/10/31/leJOS-and-EV3</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve had the opportunity in the last couple weeks to start playing
with a Lego Mindstorms EV3.  Since this hardware is such a new release
though, most of the normal contenders in the robot programming scene
(namely, RobotC) haven&rsquo;t had time to update their offerings to work
with it.</p>

<p>Enter <a href="http://lejos.org">LeJOS</a>.  Apparently the maintainer of the LeJOS project
got early access to the developer documentation and other necessary
infos, so he&rsquo;s been able to develop a setup for allowing people to
program their EV3 using Java.</p>

<!--more-->


<p>It&rsquo;s a really elegant solution actually.  Since the EV3 already runs a
full linux kernel, he just modified the base Legos linux image.  You
then partition a microSD card and write this image to it.  Now you can
boot the EV3 from the microSD card and ssh into it over either WiFi
(if you have an external USB wifi adapter that&rsquo;s compatible), or over
USB (a more recent feature).</p>

<p>My next goal is to get a clojure projet running on the ev3.  There are
two approaches that I could take.  First, I could try AOT compiling my
clojure source and then shipping just the uberjar to the EV3.  This
seems the most straightforward.  However, following this plan I almost
immediately ran into a stumbling block.  The LeJOS java library cannot
be compiled using Leiningen when not on the EV3.</p>

<p>Apparently this is because something about the clojure compilation
process actually loads the EV3 classes into the JVM.  This causes the
static initializers to be run.  And the static initializers look for
specific files in the /dev directory to try and do their thing.</p>

<p>Obviously, when you&rsquo;re not on an EV3 these files don&rsquo;t exist.</p>

<p>So the second way of doing things would be to attempt to install
leiningen on the EV3 itself.  I see a lot of potential problems with
this, first and foremost being how do I do it without a direct
connection to the internet?  Secondly, the linux installation is very
minimal, and might not actually contain all the necessary tools to
install and use leiningen.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Am I Doing This?]]></title>
    <link href="http://www.zephyrizing.net/blog/2013/09/03/why-am-i-doing-this/"/>
    <updated>2013-09-03T04:00:00-04:00</updated>
    <id>http://www.zephyrizing.net/blog/2013/09/03/why-am-i-doing-this</id>
    <content type="html"><![CDATA[<p>It&rsquo;s weird, but I feel like I&rsquo;ve been peer pressured into starting
this blog.  Not that anyone has ever said &ldquo;Geoff, you really need to
start a blog.&rdquo;  It just seems like the thing to do.  More importantly,
it seems like you&rsquo;re less legitimate as a programmer if you DON&rsquo;T have
a blog.  Particularly a blog where you write about cool
programming/tech things that you&rsquo;ve discovered or figured out.</p>

<p>But here&rsquo;s the thing.  I&rsquo;m still learning much more than I&rsquo;m figuring
out on my own.  So I decided I would write about the one subject that
I am actually exploring on my own - seasoning cast iron cookware.</p>

<!--more-->


<p>A couple years ago when I was living in my first apartment with my
best friend Garrett, we bought some cast iron skillets.  We got them
from Lodge, because it seemed like the only company that really sold
cast iron anymore.  When we got them though, the factory seasoning was
somewhat disappointing, as was the quality of the metal itself.  In
particular, we noticed that the grain of the metal was quite large and
that this led to a very rough and almost pitted looking surface to the
metal.  Not exactly ideal.</p>

<p>I had used cast iron pans for years.  They were my favorite pans that
my mother owned.  I learned a bit about how to care for cast iron from
my mother.  Mainly, not to put them away wet.  Typically we would
towel dry, and then we would put them on the stove-top for a couple
minutes until they were completely dry.  When I got my own cast iron
however, I decided that I wanted to know more about how to really
properly care for cast-iron.  But I was sorely disappointed by the
collective knowledge that I found on the internet.  Most of it was
only half complete, or simply vague.  Some pages sounded more like
urban legend than actual advice.  I was recently told with great
conviction that the one thing you absolutely cannot do is submerge a
cast-iron pan in soapy water; as though this would cause it to shatter
instantly.</p>

<p>This has started to change.  In about ten seconds of googling today
(September 2013), I found one <a href="http://sherylcanter.com/wordpress/2010/01/a-science-based-technique-for-seasoning-cast-iron/">blog post by Sheryl Canter</a>
that talks specifically about the chemistry of cast iron seasoning.
But at the time, the situation was exactly as Sheryl Canter describes,
lots of mutually conflicting information with very few common threads.</p>

<p>So Garrett and I extracted what wisdom we could from it, and basically
started experimenting.  Not terribly scientifically, but we both
anecdotally noted what we thought was effective about our various
endeavors, and ended up diverging in our methodology.  I became
partial to the coating with oil and then baking in the oven at high
heat, while Garrett went in the direction of stove-top seasoning.</p>

<p>More recently, I&rsquo;ve come around to the stove-top seasoning method,
mostly because it&rsquo;s super convenient - after you&rsquo;re done cooking, just
put some oil in the pan, and turn the heat up a bit.</p>

<p>The biggest innovation so far has been using a flat-bladed metal
spatula to actively push the oil around while heating it on the
stove-top.  This has a couple of effects, but the biggest one is that
it actively enforces the surface of the pan to be fairly even as
seasoning builds up because the spatula mechanically removes seasoning
that is remarkably higher than other points.</p>

<p>The other big boon that I stumbled on by accident was using sunflower
seed oil.  I say by accident because it just happened that Trader
Joe&rsquo;s carries a very cheap bottle of sunflower seed oil that we bought
to try out.  It turns out to be really nice and easy to cook with, and
also very good at seasoning my cast-iron.  After reading Sheryl&rsquo;s blog
post, it&rsquo;s clear that there&rsquo;s a reason why when you look at this
<a href="http://www.journeytoforever.org/biodiesel_yield.html#highiodine">table of oil iodine values</a>.  Sunflower seed oil is right up
there in the category of &ldquo;semi-drying&rdquo; oils.</p>

<p>The other interesting point about my adventures in cast-iron seasoning
has been my unfortunate tendency to periodically simply burn the
seasoning right out of my pan.  This usually happens when I get
distracted in the middle of seasoning my pan and end up leaving it in
the oven at 500 degrees for four hours.  Most recently my girlfriend
and I left for the entire day (9+ hours) after I had turned on the
electric stove-top to medium in preparation for frying up some eggs
for breakfast (which didn&rsquo;t happen).  So the pan slowly cooked it&rsquo;s
way through the seasoning, and when I got back the bottom of the
skillet was nice and grey, and covered in a fine black dust.</p>

<p>I used to get really upset every time this happened. Now, I&rsquo;ve come to
be much more Zen about it, and accept the impermanence of the
seasoning on my pan. Now, I sort of regard almost as an opportunity to
try to re-season it again.</p>
]]></content>
  </entry>
  
</feed>
